package com.utfpr.delivery.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.utfpr.delivery.dto.PedidoDTO;
import com.utfpr.delivery.dto.pedidoItem.PedidoItemDTO;
import com.utfpr.delivery.entity.Pedido;
import com.utfpr.delivery.entity.PedidoItem;
import com.utfpr.delivery.mapper.PedidoOutputMapper;
import com.utfpr.delivery.mapper.pedidoItem.PedidoItemDTOMapper;
import com.utfpr.delivery.service.PedidoItemService;
import com.utfpr.delivery.service.PedidoService;

@RestController
@RequestMapping("/pedidos")
public class PedidoItemController {
	
	@Autowired
	private PedidoItemService pedidoItemService;	
	
	@Autowired
	private PedidoItemDTOMapper pedidoItemDTOMapper;

	@GetMapping
	@ResponseBody
	public List<PedidoItemDTO> obterPedidos() {	
		
		return pedidoItemDTOMapper.mapearLista(pedidoItemService.listar());		 
	}

	@GetMapping("/{uuid}")
	@ResponseBody
	public PedidoItemDTO obterPedidoPorId(@PathVariable String uuid) {

		PedidoItem pedidoItem = pedidoService.obterPedidoPorUuid(uuid);
		
		PedidoItemDTO pedidoItemDTO = pedidoOutputMapper.mapearDTO(pedido);
		
		return pedidoDTO;
	}

	@PostMapping
	@ResponseStatus(code = HttpStatus.CREATED)
	private PedidoDTO adicionar(@RequestBody @Valid Pedido pedido) {		
		
		
		pedido = pedidoService.salvar(pedido);
		
		PedidoDTO pedidoDTO = pedidoOutputMapper.mapearDTO(pedido);
		
		return pedidoDTO;

	}

	@PutMapping("/{uuid}")
	@ResponseStatus(code = HttpStatus.OK)
	private PedidoDTO alterar(@PathVariable String uuid, @RequestBody Pedido pedido) {

		pedido = pedidoService.alterar(uuid, pedido);
		
		PedidoDTO pedidoDTO = pedidoOutputMapper.mapearDTO(pedido);
		
		return pedidoDTO;
	}

	@DeleteMapping("/{id}")
	private ResponseEntity<Pedido> deletar(@PathVariable String uuid) {

		if (pedidoService.deletar(uuid)) {
			return ResponseEntity.noContent().build();
		}

		return ResponseEntity.badRequest().build();
	}
}

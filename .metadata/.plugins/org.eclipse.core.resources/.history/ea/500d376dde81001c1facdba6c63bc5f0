package com.utfpr.delivery.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.utfpr.delivery.dto.cliente.ClienteDTO;
import com.utfpr.delivery.dto.cliente.ClienteOutputDTO;
import com.utfpr.delivery.dto.produto.ProdutoDTO;
import com.utfpr.delivery.dto.produto.ProdutoInputDTO;
import com.utfpr.delivery.dto.produto.ProdutoOutputDTO;
import com.utfpr.delivery.entity.Cliente;
import com.utfpr.delivery.entity.Produto;
import com.utfpr.delivery.mapper.cliente.ClienteOutputMapper;
import com.utfpr.delivery.mapper.produto.ProdutoDTOMapper;
import com.utfpr.delivery.mapper.produto.ProdutoInputMapper;
import com.utfpr.delivery.mapper.produto.ProdutoOutputMapper;
import com.utfpr.delivery.service.ProdutoService;

@RestController
@RequestMapping("/produtos")
public class ProdutoController {

	@Autowired
	private ProdutoService produtoService;
	@Autowired
	private ProdutoOutputMapper produtoOutputMapper;
	@Autowired
	private ProdutoDTOMapper produtoDTOMapper;
	@Autowired
	private ProdutoInputMapper produtoInputMapper;
	
	
	@GetMapping
	@ResponseBody
	public List<ProdutoOutputDTO> obterProdutos() {

		List<Produto> produtos = produtoService.obterProdutos();		
		List<ProdutoOutputDTO> produtoOutputDTOs = produtoOutputMapper.mapearLista(produtos);
		
		return produtoOutputDTOs;
	}

	@GetMapping("/{uuid}")
	@ResponseBody
	public ProdutoDTO obterProdutoPorId(@PathVariable String uuid) {

		Produto produto = produtoService.obterProdutoPorUuid(uuid);		
		ProdutoDTO produtoDTO = produtoDTOMapper.mapearDTO(produto);
		
		return produtoDTO;
	}

	@PostMapping
	@ResponseStatus(code = HttpStatus.CREATED)
	private ProdutoDTO adicionar(@RequestBody ProdutoInputDTO produtoInputDTO) {

		Produto produto = produtoInputMapper.mapearEntity(produtoInputDTO);		
		produto = produtoService.salvar(produto);		
		ProdutoDTO produtoDTO = produtoDTOMapper.mapearDTO(produto);
		
		return produtoDTO;

	}

	@PutMapping("/{id}")
	@ResponseStatus(code = HttpStatus.OK)
	private ProdutoDTO alterar(@PathVariable Long id, @RequestBody ProdutoInputDTO produtoInputDTO) {

		Produto produto = clienteInputMapper.mapearEntity(clienteInputDTO);		
		produto = clienteService.atualizar(uuid, cliente);		
		ClienteDTO clienteDTO = clienteDTOMapper.mapearDTO(cliente);
		
		return clienteDTO;
	}

	@DeleteMapping("/{id}")
	private ResponseEntity<Produto> deletar(@PathVariable Long id) {

		if (produtoService.deletar(id)) {
			return ResponseEntity.noContent().build();
		}

		return ResponseEntity.badRequest().build();
	}
}

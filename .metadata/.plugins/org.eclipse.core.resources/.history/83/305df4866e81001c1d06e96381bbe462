package com.utfpr.delivery.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.utfpr.delivery.dto.ProdutoDTO;
import com.utfpr.delivery.dto.ProdutoResumoDTO;
import com.utfpr.delivery.entity.Produto;
import com.utfpr.delivery.entity.Restaurante;
import com.utfpr.delivery.mapper.ProdutoResumoOutputMapper;
import com.utfpr.delivery.service.ProdutoService;
import com.utfpr.delivery.service.RestauranteService;

@RestController
@RequestMapping("/produtos")
public class ProdutoController {

	@Autowired
	private ProdutoService produtoService;
	@Autowired
	private RestauranteService restauranteService;
	@Autowired
	private ProdutoResumoOutputMapper produtoResumoOutputMapper;

	@GetMapping
	@ResponseBody
	public List<ProdutoDTO> obterProdutos() {

		return produtoService.obterProdutoDTOs();
	}

	@GetMapping("/{id}")
	@ResponseBody
	public Produto obterProdutoPorId(@PathVariable Long id) {

		return produtoService.obterProdutoPorId(id);
	}

	@PostMapping
	@ResponseStatus(code = HttpStatus.CREATED)
	private Produto adicionar(@RequestBody Produto produto) {

		return produtoService.salvar(produto);

	}

	@PutMapping("/{id}")
	@ResponseStatus(code = HttpStatus.OK)
	private Produto alterar(@PathVariable Long id, @RequestBody Produto produto) {

		return produtoService.alterar(id, produto);
	}

	@DeleteMapping("/{id}")
	private ResponseEntity<Produto> deletar(@PathVariable Long id) {

		if (produtoService.deletar(id)) {
			return ResponseEntity.noContent().build();
		}

		return ResponseEntity.badRequest().build();
	}
}
